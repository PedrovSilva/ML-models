{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","import pandas as pd\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zREK8hCMuReI","executionInfo":{"status":"ok","timestamp":1695081420546,"user_tz":240,"elapsed":2886,"user":{"displayName":"PEDRO SILVA","userId":"09685098084927524550"}},"outputId":"a4ae5a31-e4bd-4508-eff1-029b9616ade7"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["sep = ';'\n","dtype = 'float'\n","\n","df = pd.read_csv('/content/agora vai.csv', sep=sep, dtype=dtype)\n","df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qCuT2SIwu5JV","executionInfo":{"status":"ok","timestamp":1695081552775,"user_tz":240,"elapsed":4,"user":{"displayName":"PEDRO SILVA","userId":"09685098084927524550"}},"outputId":"3490c2aa-7a9c-4f36-9438-44fbf83458c8"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Unnamed: 0', 'BlockID', 'Mean_voo1_GLI', 'Median_voo1_GLI',\n","       'Mean_voo1__SAVI', 'Median_voo1__SAVI', 'Mean_voo1__MCARI',\n","       'Median_voo1__MCARI', 'Mean_voo1__GLI', 'Median_voo1__GLI',\n","       'Mean_voo1__SCCCI', 'Median_voo1__SCCCI', 'Mean_voo1__NDVI',\n","       'Median_voo1__NDVI', 'Mean_voo2__NDVI', 'Median_voo2__NDVI',\n","       'Mean_voo2__NDRE', 'Median_voo2__NDRE', 'Mean_voo2__SAVI',\n","       'Median_voo2__SAVI', 'Mean_voo2__MCARI', 'Median_voo2__MCARI',\n","       'Mean_voo2__GLI', 'Median_voo2__GLI', 'Mean_voo2__SCCCI',\n","       'Median_voo2__SCCCI', 'Mean_voo3__NDVI', 'Median_voo3__NDVI',\n","       'Mean_voo3__NDRE', 'Median_voo3__NDRE', 'Mean_voo3__SAVI',\n","       'Median_voo3__SAVI', 'Mean_voo3__MCARI', 'Median_voo3__MCARI',\n","       'Mean_voo3__GLI', 'Median_voo3__GLI', 'Mean_voo3__SCCCI',\n","       'Median_voo3__SCCCI', 'Mean_voo4__NDVI', 'Median_voo4__NDVI',\n","       'Mean_voo4__NDRE', 'Median_voo4__NDRE', 'Mean_voo4__SAVI',\n","       'Median_voo4__SAVI', 'Mean_voo4__MCARI', 'Median_voo4__MCARI',\n","       'Mean_voo4__GLI', 'Median_voo4__GLI', 'Mean_voo4__SCCCI',\n","       'Median_voo4__SCCCI', 'Mean_voo1__NDRE', 'Median_voo1__NDRE',\n","       'Mean_voo1__SAVI.1', 'Median_voo1__SAVI.1', 'Mean_voo1__MCARI.1',\n","       'Median_voo1__MCARI.1', 'Mean_voo1__GLI.1', 'Median_voo1__GLI.1',\n","       'Mean_voo1__SCCCI.1', 'Median_voo1__SCCCI.1', 'Mean_voo1__NDVI.1',\n","       'Median_voo1__NDVI.1', 'Mean_voo2__NDVI.1', 'Median_voo2__NDVI.1',\n","       'Mean_voo2__NDRE.1', 'Median_voo2__NDRE.1', 'Mean_voo2__SAVI.1',\n","       'Median_voo2__SAVI.1', 'Mean_voo2__MCARI.1', 'Median_voo2__MCARI.1',\n","       'Mean_voo2__GLI.1', 'Median_voo2__GLI.1', 'Mean_voo2__SCCCI.1',\n","       'Median_voo2__SCCCI.1', 'Mean_voo3__NDVI.1', 'Median_voo3__NDVI.1',\n","       'Mean_voo3__NDRE.1', 'Median_voo3__NDRE.1', 'Mean_voo3__SAVI.1',\n","       'Median_voo3__SAVI.1', 'Mean_voo3__MCARI.1', 'Median_voo3__MCARI.1',\n","       'Mean_voo3__GLI.1', 'Median_voo3__GLI.1', 'Mean_voo3__SCCCI.1',\n","       'Median_voo3__SCCCI.1', 'Mean_voo4__NDVI.1', 'Median_voo4__NDVI.1',\n","       'Mean_voo4__NDRE.1', 'Median_voo4__NDRE.1', 'Mean_voo4__SAVI.1',\n","       'Median_voo4__SAVI.1', 'Mean_voo4__MCARI.1', 'Median_voo4__MCARI.1',\n","       'Mean_voo4__GLI.1', 'Median_voo4__GLI.1', 'Mean_voo4__SCCCI.1',\n","       'Median_voo4__SCCCI.1', 'Mean', 'Median'],\n","      dtype='object')"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["\n","\n","\n","\n","\n","\n","import numpy as np\n","\n","# Identifique outliers usando o método estatístico (por exemplo, 3 desvios padrão)\n","mean = df['Mean_voo4__NDVI'].mean()\n","std_dev = df['Mean_voo4__NDVI'].std()\n","threshold = 2 # Defina o limite de desvios padrão para considerar como outliers\n","outliers = df[(df['Mean_voo4__NDVI'] - mean).abs() > threshold * std_dev]\n","\n","# Calcule a quantidade de outliers\n","quantidade_de_outliers = len(outliers)\n","\n","print(f'Quantidade de outliers: {quantidade_de_outliers}')"],"metadata":{"id":"G5922kqSQzzc","executionInfo":{"status":"ok","timestamp":1695081654357,"user_tz":240,"elapsed":291,"user":{"displayName":"PEDRO SILVA","userId":"09685098084927524550"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"11f3cda4-ae76-4d93-8374-a20f6818f4af"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Quantidade de outliers: 3\n"]}]}]}